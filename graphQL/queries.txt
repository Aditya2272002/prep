CREATE
{
  "query": "mutation { createItem(name: \"Laptop\", description: \"A powerful gaming laptop\") { item { id name description } } }"
}

UPDATE
{
  "query": "mutation { updateItem(id: 1, name: \"Gaming Laptop\", description: \"A high-end gaming laptop\") { item { id name description } } }"
}

DELETE
{
  "query": "mutation { deleteItem(id: 1) { ok } }"
}

FETCH ALL
{
  "query": "{ allItems { id name description } }"
}

FETCH BY ID
{
  "query": "{ itemById(id: 1) { id name description } }"
}



# This type should be there in all the graphQL, it's job is to define the entry points to the graph and to specify the return points of those entry points. Eg: If I want the user to query the Items and get back all the items list then I have to mention that in this as a resolver. So this sets the entry point where user can start initially